# Home Assistant Operating System release build workflow

name: Release build

on:
  release:
    types: [published]

jobs:
  validate_release:
    name: Validate release
    runs-on: [ "ubuntu-20.04" ]
    outputs:
      version: ${{ steps.version_check.outputs.version }}
      version_dev: ${{ steps.version_check.outputs.version_dev }}
    steps:
      - uses: actions/checkout@v2
      - name: Validate version
        id: version_check
        run: |
          major=$(cat ${GITHUB_WORKSPACE}/buildroot-external/meta | grep VERSION_MAJOR | cut -d'=' -f2)
          build=$(cat ${GITHUB_WORKSPACE}/buildroot-external/meta | grep VERSION_BUILD | cut -d'=' -f2)
          tag_major=$(echo "${{ github.event.release.tag_name }}" | cut -d '.' -f 1)
          tag_build=$(echo "${{ github.event.release.tag_name }}" | cut -d '.' -f 2)
          tag_dev=$(echo "${{ github.event.release.tag_name }}" | cut -d '.' -f 3)
          if [ "${major}.${build}" != "${tag_major}.${tag_build}" ]; then
            echo "Version number in Buildroot metadata is does not match tag (${major}.${build} vs ${{ github.event.release.tag_name }})."
            exit 1
          fi
          if [ "" != "${tag_dev}" ]; then
            echo "Note: Release build with custom dev part: ${tag_dev}."
            echo "::set-output name=version::${major}.${build}.${tag_dev}"
          else
            echo "::set-output name=version::${major}.${build}"
          fi
          echo "::set-output name=version_dev::${tag_dev}"

  build:
    name: Release build for ${{ matrix.board.name }}
    needs: validate_release
    strategy:
      matrix:
        board:
          - {"name": "generic_x86_64", "output": "generic-x86-64", "runner": "ubuntu-20.04"}
    runs-on: ${{ matrix.board.runner }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Build container
        run: docker build -t haos-builder .

      - name: Build
        run: |
          BUILDER_UID="$(id -u)"
          BUILDER_GID="$(id -g)"
          docker run --rm --privileged -v "${GITHUB_WORKSPACE}:/build" \
            -e BUILDER_UID="${BUILDER_UID}" -e BUILDER_GID="${BUILDER_GID}" \
            -v "${{ matrix.board.runner }}-build-cache:/cache" \
            haos-builder make BUILDDIR=/build VERSION_DEV=${{ needs.validate_release.outputs.version_dev }} ${{ matrix.board.name }}

      - name: Upload disk image
        if: ${{ matrix.board.name != 'ova' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ github.workspace }}/release/haos_${{ matrix.board.output }}-${{ needs.validate_release.outputs.version }}.img.xz
          asset_name: haos_${{ matrix.board.output }}-${{ needs.validate_release.outputs.version }}.img.xz
          asset_content_type: application/x-xz
